@article{BAHAADINI2018172,
title = "Machine learning for Gravity Spy: Glitch classification and dataset",
journal = "Information Sciences",
volume = "444",
pages = "172 - 186",
year = "2018",
issn = "0020-0255",
doi = "https://doi.org/10.1016/j.ins.2018.02.068",
url = "http://www.sciencedirect.com/science/article/pii/S0020025518301634",
author = "S. Bahaadini and V. Noroozi and N. Rohani and S. Coughlin and M. Zevin and J.R. Smith and V. Kalogera and A. Katsaggelos",
keywords = "Deep learning, aLIGO, Dataset, Machine learning, Classification, Gravity Spy",
abstract = "The detection of gravitational waves with ground-based laser-interferometric detectors requires sensitivity to changes in distance much smaller than the diameter of atomic nuclei. Though sophisticated machinery and techniques have been developed over the past few decades to isolate such instruments from non-astrophysical noise, the detectors are still susceptible to instrumental and environmental noise transients known as “glitches,” which hinder searches for transient gravitational waves. The Gravity Spy project is an effort to comprehensively classify the glitches that afflict gravitational wave detectors into morphological families by combining the strengths of machine learning algorithms and citizen scientists. This paper presents the initial Gravity Spy dataset used for citizen scientist and machine learning classification – a static, accessible, documented dataset for testing machine learning supervised classification. Previous versions of this dataset used in [8, 53] did not include all current classes and also for some of the classes, some samples were pruned and added. This set consists of time–frequency images of LIGO glitches and their associated metadata. These glitches are organized by time–frequency morphology into 22 classes for which descriptions and representative images are presented. Results from the application of state-of-the-art supervised classification methods to this dataset are presented in order to provide baselines for future glitch classification work. Standard splitting for training, validation, and testing sets are also presented to facilitate the comparison between different machine learning methods. The baseline methods are selected from both traditional and more recent deep learning approaches. An ensemble framework is developed that demonstrates that combining various classifiers can yield a more accurate model for classification. The ensemble classifier, trained with the standard training set, achieves 98.21% accuracy on the standard test set."
}